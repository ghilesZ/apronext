### Starting build.
# Target: src/environmentext.ml.depends, tags: { package(apron), extension:ml, file:src/environmentext.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package apron -modules src/environmentext.ml > src/environmentext.ml.depends # cached
# Target: src/environmentext.cmo, tags: { package(apron), byte, compile, extension:cmo, extension:ml, file:src/environmentext.cmo, file:src/environmentext.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package apron -I src -I tests -o src/environmentext.cmo src/environmentext.ml # cached
# Target: src/environmentext.cmx, tags: { package(apron), compile, extension:cmx, extension:ml, file:src/environmentext.cmx, file:src/environmentext.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package apron -I src -I tests -o src/environmentext.cmx src/environmentext.ml # cached
# Target: src/array_maker.ml.depends, tags: { package(apron), extension:ml, file:src/array_maker.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package apron -modules src/array_maker.ml > src/array_maker.ml.depends # cached
# Target: src/array_maker.cmo, tags: { package(apron), byte, compile, extension:cmo, extension:ml, file:src/array_maker.cmo, file:src/array_maker.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package apron -I src -I tests -o src/array_maker.cmo src/array_maker.ml # cached
# Target: src/array_maker.cmx, tags: { package(apron), compile, extension:cmx, extension:ml, file:src/array_maker.cmx, file:src/array_maker.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package apron -I src -I tests -o src/array_maker.cmx src/array_maker.ml # cached
# Target: src/linconsext.ml.depends, tags: { package(apron), extension:ml, file:src/linconsext.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package apron -modules src/linconsext.ml > src/linconsext.ml.depends # cached
# Target: src/linconsext.cmo, tags: { package(apron), byte, compile, extension:cmo, extension:ml, file:src/linconsext.cmo, file:src/linconsext.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package apron -I src -I tests -o src/linconsext.cmo src/linconsext.ml # cached
# Target: src/linconsext.cmx, tags: { package(apron), compile, extension:cmx, extension:ml, file:src/linconsext.cmx, file:src/linconsext.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package apron -I src -I tests -o src/linconsext.cmx src/linconsext.ml # cached
# Target: src/tconsext.ml.depends, tags: { package(apron), extension:ml, file:src/tconsext.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package apron -modules src/tconsext.ml > src/tconsext.ml.depends # cached
# Target: src/tconsext.cmo, tags: { package(apron), byte, compile, extension:cmo, extension:ml, file:src/tconsext.cmo, file:src/tconsext.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package apron -I src -I tests -o src/tconsext.cmo src/tconsext.ml # cached
# Target: src/tconsext.cmx, tags: { package(apron), compile, extension:cmx, extension:ml, file:src/tconsext.cmx, file:src/tconsext.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package apron -I src -I tests -o src/tconsext.cmx src/tconsext.ml # cached
# Target: src/abstractext.ml.depends, tags: { package(apron), extension:ml, file:src/abstractext.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package apron -modules src/abstractext.ml > src/abstractext.ml.depends # cached
# Target: src/abstractext.cmo, tags: { package(apron), byte, compile, extension:cmo, extension:ml, file:src/abstractext.cmo, file:src/abstractext.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package apron -I src -I tests -o src/abstractext.cmo src/abstractext.ml # cached
# Target: src/abstractext.cmx, tags: { package(apron), compile, extension:cmx, extension:ml, file:src/abstractext.cmx, file:src/abstractext.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package apron -I src -I tests -o src/abstractext.cmx src/abstractext.ml # cached
# Target: src/domain.ml.depends, tags: { package(apron), extension:ml, file:src/domain.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package apron -modules src/domain.ml > src/domain.ml.depends # cached
# Target: src/domain.cmo, tags: { package(apron), byte, compile, extension:cmo, extension:ml, file:src/domain.cmo, file:src/domain.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package apron -I src -I tests -o src/domain.cmo src/domain.ml # cached
# Target: src/domain.cmx, tags: { package(apron), compile, extension:cmx, extension:ml, file:src/domain.cmx, file:src/domain.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package apron -I src -I tests -o src/domain.cmx src/domain.ml # cached
# Target: src/apronext.cmxa, tags: { package(apron), extension:cmxa, file:src/apronext.cmxa, library, link, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -a -package apron src/environmentext.cmx src/array_maker.cmx src/linconsext.cmx src/tconsext.cmx src/abstractext.cmx src/domain.cmx -o src/apronext.cmxa # cached
# Target: src/apronext.cmxs, tags: { package(apron), extension:cmxs, file:src/apronext.cmxs, library, link, linkall, native, ocaml, quiet, shared, traverse }
ocamlfind ocamlopt -shared -linkall -package apron src/apronext.cmxa -o src/apronext.cmxs
# Compilation successful.
